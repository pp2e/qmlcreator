on:
  push:
  workflow_dispatch:

jobs:
  build-ios:
    # runs-on: macos-latest
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Install host Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.7.*
        host: 'mac'
        target: 'desktop'
        arch: 'clang_64'
        modules: 'qtshadertools'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.7.*
        host: 'mac'
        target: 'ios'
        arch: 'ios'
        modules: 'qtshadertools'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true

    - name: Install ninja
      run: brew install ninja

    - name: Build ecm
      run: |
        git clone https://invent.kde.org/frameworks/extra-cmake-modules ${{ runner.temp }}/ecm
        cd ${{ runner.temp }}/ecm
        git checkout v6.5.0
        cmake .
        cmake --build .
        cmake --install . --prefix ${{ env.QT_ROOT_DIR }}/

    - name: Install certs
      run: |
        echo ${{ secrets.IPA_CERT_BASE64 }}     | base64 -d > distribution.cer
        echo ${{ secrets.IPA_PRIV_KEY_BASE64 }} | base64 -d > distribution.p12
        echo ${{ secrets.IPA_PROFILE_BASE64 }}  | base64 -d > profile.mobileprovision

        security create-keychain -p "" keys
        security set-keychain-settings keys
        security unlock-keychain -p "" keys
        security import distribution.cer -k keys -t cert -A
        security import distribution.p12 -k keys -t priv -A

        mkdir -p "~/Library/MobileDevice/Provisioning Profiles"
        cp profile.mobileprovision "~/Library/MobileDevice/Provisioning Profiles"

    - name: Configure
      run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -B build
                            -DQT_HOST_PATH=${{ env.QT_ROOT_DIR }}/../macos/
                            -DQt6LinguistTools_DIR=${{ env.QT_ROOT_DIR }}/../macos/lib/cmake/Qt6LinguistTools
                            -DQt6ShaderToolsTools_DIR=${{ env.QT_ROOT_DIR }}/../macos/lib/cmake/Qt6ShaderToolsTools || cmake -B build

    - name: Build
      run: xcodebuild build DEVELOPMENT_TEAM=${{ secrets.TEAM_ID }} CODE_SIGN_STYLE="Manual" PROVISIONING_PROFILE_SPECIFIER="${{ secrets.PROFILE_NAME }}" CODE_SIGN_IDENTITY="${{ secrets.SIGN_IDENTITY }}" -project qmlcreator.xcodeproj -configuration Release -destination "generic/platform=iOS" -scheme qmlcreator -archivePath qmlcreator.xcarchive archive
      #run: cmake --build .
      working-directory: build

    - name: Package
      run: |
        mkdir Payload
        mv src/*.app Payload
        zip -qq -r -9 Qmlcreator.ipa Payload
      # working-directory: build/qmlcreator.xcarchive/Products/Applications
      working-directory: build

    - name: 'Upload app to TestFlight'
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: 'Qmlcreator_signed.ipa'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

    - name: Save APK
      uses: actions/upload-artifact@v4
      with:
        name: qmlcreator-ipa
        # path: build/qmlcreator.xcarchive/Products/Applications/*.ipa
        path: build/*.ipa
