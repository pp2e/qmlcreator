on:
  push:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Install host Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.7.*
        host: 'mac'
        target: 'desktop'
        arch: 'clang_64'
        modules: 'qtshadertools'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.7.*
        host: 'mac'
        target: 'ios'
        arch: 'ios'
        modules: 'qtshadertools'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true

    - name: Install ninja
      run: brew install ninja

    - name: Build ecm
      run: |
        git clone https://invent.kde.org/frameworks/extra-cmake-modules ${{ runner.temp }}/ecm
        cd ${{ runner.temp }}/ecm
        git checkout v6.5.0
        cmake .
        cmake --build .
        cmake --install . --prefix ${{ env.QT_ROOT_DIR }}/

    - run: ls ${{ env.QT_ROOT_DIR }}/../macos/lib/cmake/

    - name: Configure
      run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -B build -G Ninja
                            -DQT_HOST_PATH=${{ env.QT_ROOT_DIR }}/../macos/
                            -DQt6LinguistTools_DIR=${{ env.QT_ROOT_DIR }}/../macos/lib/cmake/Qt6LinguistTools
                            -DQt6ShaderToolsTools_DIR=${{ env.QT_ROOT_DIR }}/../macos/lib/cmake/Qt6ShaderToolsTools || cmake -B build

    - name: Build
      # run: xcodebuild build -project qmlcreator.xcodeproj -configuration Release -destination "generic/platform=iOS" CODE_SIGNING_ALLOWED=NO -scheme qmlcreator -archivePath qmlcreator.xcarchive archive
      run: cmake --build .
      working-directory: build

    - name: Package
      run: |
        mkdir Payload
        mv src/*.app Payload
        zip -qq -r -9 Qmlcreator.ipa Payload
      # working-directory: build/qmlcreator.xcarchive/Products/Applications
      working-directory: build

    - name: Save APK
      uses: actions/upload-artifact@v4
      with:
        name: qmlcreator-ipa
        # path: build/qmlcreator.xcarchive/Products/Applications/*.ipa
        path: build/*.ipa


  build-apk:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Install Host Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.7.2
        host: 'linux'
        target: 'desktop'
        arch: 'linux_gcc_64'
        modules: 'qtshadertools'
        tools: 'tools_ninja tools_cmake'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.7.2
        host: 'linux'
        target: 'android'
        arch: 'android_arm64_v8a'
        modules: 'qtshadertools'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true

    - name: Build ecm
      run: |
        git clone https://invent.kde.org/frameworks/extra-cmake-modules ${{ runner.temp }}/ecm
        cd ${{ runner.temp }}/ecm
        git checkout v6.5.0
        cmake .
        cmake --build .
        cmake --install . --prefix ${{ env.QT_ROOT_DIR }}/

    - name: Configure
      run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -B build
                            -DQT_HOST_PATH=${{ env.QT_ROOT_DIR }}/../gcc_64/
                            -DQt6LinguistTools_DIR=${{ env.QT_ROOT_DIR }}/../gcc_64/lib/cmake/Qt6LinguistTools
                            -DQt6ShaderToolsTools_DIR=${{ env.QT_ROOT_DIR }}/../gcc_64/lib/cmake/Qt6ShaderToolsTools || cmake -B build

    - name: Build
      run: cmake --build .
      working-directory: build

    - name: Save APK
      uses: actions/upload-artifact@v4
      with:
        name: qmlcreator-apk
        path: build/src/android-build/*.apk

  build-ut:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Install click
      run: sudo apt install click gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - run: |
        sudo dpkg --add-architecture arm64
        ls /etc/apt/sources.list.d
        cat /etc/apt/sources.list.d/azure-cli.sources
        echo -----
        sudo sed -i '/multiverse/a \Architectures: amd64' /etc/apt/sources.list.d/ubuntu.sources
        echo #arm | sudo tee -a /etc/apt/sources.list.d/ubuntu.sources
        echo Types: deb | sudo tee -a /etc/apt/sources.list.d/ubuntu.sources
        echo URIs: http://azure.ports.ubuntu.com/ubuntu-ports/ | sudo tee -a /etc/apt/sources.list.d/ubuntu.sources
        echo Suites: noble noble-updates noble-backports | sudo tee -a /etc/apt/sources.list.d/ubuntu.sources
        echo Components: main universe restricted multiverse | sudo tee -a /etc/apt/sources.list.d/ubuntu.sources
        echo Architectures: arm64 | sudo tee -a /etc/apt/sources.list.d/ubuntu.sources
        echo Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg | sudo tee -a /etc/apt/sources.list.d/ubuntu.sources

        cat /etc/apt/sources.list.d/ubuntu.sources
        echo -----
        sudo sed -i 's/azure\.//' /etc/apt/sources.list.d/ubuntu.sources
        cat /etc/apt/sources.list.d/azure-cli.sources
        sudo apt update
        sudo apt upgrade
        sudo apt install libglx-dev:arm64 libgl1-mesa-dev:arm64 libvulkan-dev:arm64 libxkbcommon-dev:arm64 --no-install-recommends --no-install-suggests

    - name: Install Host Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.7.2
        host: 'linux'
        target: 'desktop'
        arch: 'linux_gcc_64'
        modules: 'qtshadertools'
        tools: 'tools_ninja tools_cmake'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true
        set-env: false

    - name: Install arm Qt
      uses: ArchitektApx/install-qt-action@v4
      with:
        version: 6.7.2
        host: 'linux_arm64'
        target: 'desktop'
        arch: 'linux_gcc_arm64'
        modules: 'qtshadertools'
        dir: '${{ runner.temp }}'
        install-deps: 'true'
        cache: true
        set-env: false

    - name: Build ecm
      env:
        QT_ROOT_DIR: ${{ runner.temp }}/Qt/6.7.2/gcc_arm64
      run: |
        ls ${{ env.QT_ROOT_DIR }}/..
        git clone https://invent.kde.org/frameworks/extra-cmake-modules ${{ runner.temp }}/ecm
        cd ${{ runner.temp }}/ecm
        git checkout v6.5.0
        cmake .
        cmake --build .
        cmake --install . --prefix ${{ env.QT_ROOT_DIR }}/

    - name: Configure
      env:
        QT_ROOT_DIR: ${{ runner.temp }}/Qt/6.7.2/gcc_arm64
      run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -B build -DCLICK_MODE=ON -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++
                            -DQT_HOST_PATH=${{ env.QT_ROOT_DIR }}/../gcc_64/
                            -DQt6LinguistTools_DIR=${{ env.QT_ROOT_DIR }}/../gcc_64/lib/cmake/Qt6LinguistTools
                            -DQt6ShaderToolsTools_DIR=${{ env.QT_ROOT_DIR }}/../gcc_64/lib/cmake/Qt6ShaderToolsTools || cmake -B build
                            -DXKB_LIBRARY=/usr/lib/aarch64-linux-gnu/

    - name: Build
      run: cmake --build .
      working-directory: build

    - name: Package
      working-directory: build
      run: |
        cmake --install . --prefix $(pwd)/trash # fool kirigami
        click build pkg

    - run: ls build

    - name: Save APK
      uses: actions/upload-artifact@v4
      with:
        name: qmlcreator-click
        path: build/*.click
